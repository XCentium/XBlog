@using Sitecore.Feature.XBlog.Items.Blog;
@using Sitecore.Feature.XBlog.Search;
@using Sitecore.Feature.XBlog.General;
@using Sitecore.Data.Items;
@using Sitecore.Mvc;
@model Sitecore.Feature.XBlog.Models.Blog.TagListModel

@{
    if (Model == null)
    {
        return;
    }
    BlogSettings settingsItem = DataManager.GetBlogSettingsItem(Model.dataSourceItem != null ? Model.dataSourceItem : Sitecore.Context.Item);
}


<div id='@Html.Raw(settingsItem.PrimaryCSSID)-TagList' >
    <h3>@Html.Sitecore().Field(BlogSettings.TagListTitleFieldId, settingsItem.InnerItem)</h3>
    @{
      
        if (Model.tags == null || !Model.tags.Any())
        {
            return;
        }
    }

    @foreach (Tag tag in Model.tags) 
    {
        
        string itemID = tag.ItemId.ToString();
        string countDisplay = "";
        if (Model.tagCount.ContainsKey(itemID) && settingsItem.DisplayCountOnTagList)
        {
            countDisplay = String.Format(" ({0})", Model.tagCount[itemID].ToString());
        }
        <a href="@Html.Raw(TagManager.GetTagUrl(tag.TagName, Model.dataSourceItem != null ? Model.dataSourceItem : Sitecore.Context.Item))">@Html.Raw(tag.TagName + countDisplay)</a>
        <br />
    }
 
</div>